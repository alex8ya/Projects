Parameters:
  VPCCIDR:
    Description: VPC CIDR Block
    Type: String
    Default: 66.6.0.0/16
  SNCIDRs: 
    Description: "Comma-delimited list of CIDR blocks"
    Type: CommaDelimitedList
    Default: "66.6.0.0/24, 66.6.1.0/24, 66.6.2.0/24, 66.6.3.0/24, 66.6.4.0/24, 66.6.5.0/24, 66.6.6.0/24, 66.6.7.0/24, 66.6.8.0/24, 66.6.9.0/24, 66.6.10.0/24, 66.6.11.0/24"
Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label:
          default: "Network"
        Parameters:
          - VPCCIDR
          - SNCIDRs
Resources:  
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: CF Test
  SNa:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'True'
      Tags:
        - Key: Name
          Value: SNa Pub  
  SNb:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'True'
      Tags:
        - Key: Name
          Value: SNb Pub
  SNc:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 2
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'True'
      Tags:
        - Key: Name
          Value: SNc Pub
  SNd:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [3, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
        - 3
        - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'True'
      Tags:
        - Key: Name
          Value: SNd Pub  
  SNe:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [4, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 4
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'True'
      Tags:
        - Key: Name
          Value: SNe Pub
  SNf:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [5, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 5
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'True'
      Tags:
        - Key: Name
          Value: SNf Pub        
  SNaPriv:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [6, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
        - 0
        - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'False'
      Tags:
        - Key: Name
          Value: SNa Priv  
  SNbPriv:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [7, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'False'
      Tags:
        - Key: Name
          Value: SNb Priv
  SNcPriv:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [8, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 2
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'False'
      Tags:
        - Key: Name
          Value: SNc Priv
  SNdPriv:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [9, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
        - 3
        - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'False'
      Tags:
        - Key: Name
          Value: SNd Priv  
  SNePriv:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [10, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 4
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'False'
      Tags:
        - Key: Name
          Value: SNe Priv
  SNfPriv:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [11, !Ref SNCIDRs]
      AvailabilityZone: 
        Fn::Select: 
          - 5
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'False'
      Tags:
        - Key: Name
          Value: SNf Priv        
  CfRt:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: CF RT
  CfR:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - IGW
    Properties:
      RouteTableId: !Ref CfRt
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  SNAassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNa
      RouteTableId: !Ref CfRt
  SNBassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNb
      RouteTableId: !Ref CfRt
  SNCassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNc
      RouteTableId: !Ref CfRt
  SNDassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNd
      RouteTableId: !Ref CfRt
  SNEassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNe
      RouteTableId: !Ref CfRt
  SNFassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNf
      RouteTableId: !Ref CfRt
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: CF IGW
  IGWAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  NATRt:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: CF NAT RT
  NATR:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref NATRt
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATgw
  EIP:
    DependsOn: IGWAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATgw:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId: !Ref SNa
  PSNAassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNaPriv
      RouteTableId: !Ref NATRt
  PSNBassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNbPriv
      RouteTableId: !Ref NATRt
  PSNCassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNcPriv
      RouteTableId: !Ref NATRt
  PSNDassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNdPriv
      RouteTableId: !Ref NATRt
  PSNEassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNePriv
      RouteTableId: !Ref NATRt
  PSNFassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SNfPriv
      RouteTableId: !Ref NATRt
  